package com.createMarshal;


import java.io.File;
import java.math.BigDecimal;
import java.util.GregorianCalendar;
import java.util.List;

import javax.xml.bind.JAXB;
import javax.xml.bind.JAXBElement;

import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.datatype.DatatypeConfigurationException;



import com.createMarshal.primer.po.*;

/*
 *  範例說明：
 *  
 *  create-marshal (formerly SampleApp3)
 *  
 *  創建元帥（前身為SampleApp3）
 *  此示例應用程序演示了如何使用ObjectFactory的類來創建一個Java內容樹從無到有，編組到XML數據。它還演示了如何將內容添加到JAXB列表屬性。
 *  
 *  
 *  ※ import java content classes generated by binding compiler
 *  
 */
public class Main {

    
    
  public static void main(String[] args) {
    
    // 建立父元素的物件
    PurchaseOrderType po = new PurchaseOrderType();
      
    
    // 設定父元素：purchaseOrder 的屬性:orderDate
    po.setOrderDate(getDate());  
      
    // 設定子元素 shipTo 的 USAddress 相關資訊
    USAddress shipTo = createUSAddress("kevin","民生東路一段267巷5號","台北市","台灣渻","104"); 
    po.setShipTo(shipTo);       
      
    // 設定子元素 billTo 的 USAddress 相關資訊
    USAddress billTo = createUSAddress("hungmans6779","8 Oak Avenue","Cambridge","MA","67890");
    po.setBillTo(billTo);       
      
  
    
    // create an empty Items object
    Items items = new Items();
    
    
    // get a reference to the ItemType list
    List<Items.Item> itemList = items.getItem();
      
    // start adding ItemType objects into it
    itemList.add(createItem("Nosferatu - Special Edition (1929)",5,new BigDecimal("19.99"),null,null,"242-NO"));
    itemList.add(createItem("The Mummy (1959)",3,new BigDecimal("19.98"),null,null,"242-MU"));
    itemList.add(createItem("Godzilla and Mothra: Battle for Earth/Godzilla vs. King Ghidora",3,new BigDecimal("27.95"),null,null,"242-GZ"));
      
    // 設定子元素 items 的 item 相關資訊
    po.setItems(items);
    
    
     
    
  
    
    // 建立 JAXBElement
    JAXBElement<PurchaseOrderType> poElement = (new ObjectFactory()).createPurchaseOrder(po);
    
    // 建立 Marshaller to System.out
    JAXB.marshal(poElement,System.out);

    // 建立 Marshaller to File(create-marshal.out.xml);   
    File file = new File("create-marshal.out.xml");
    JAXB.marshal(poElement,file);
     
  }  // end main
  
  
  
  
  
  
  
  
  // 建立 USAddress 的物件
  public static USAddress createUSAddress(String name,String street,String city,String state,String zip) {
  
    // create an empty USAddress objects                                             
    USAddress address = new USAddress();
     
    // set properties on it
    address.setName(name);
    address.setStreet(street);
    address.setCity(city);
    address.setState(state);
    address.setZip(new BigDecimal(zip));
      
    address.setCountry("TW");
    
    // return it
    return address;
  }
  
  
  
  
  
  // 建立 Item 的物件(靜態內部類別物件)
  public static Items.Item createItem(String productName,int quantity,BigDecimal price,String comment,XMLGregorianCalendar shipDate,String partNum ) {
 
    // create an empty ItemType object
    Items.Item item = new Items.Item();
      
    // set properties on it
    item.setProductName(productName);
    item.setQuantity(quantity);
    item.setUSPrice(price);
    item.setComment(comment);
    item.setShipDate(shipDate);
    item.setPartNum(partNum);
      
    // return it
    return item;
  }
                                         
    
  
  
  
  private static XMLGregorianCalendar getDate() {
    try {
        return DatatypeFactory.newInstance().newXMLGregorianCalendar(new GregorianCalendar());
    } catch (DatatypeConfigurationException e) {
        throw new Error(e);
    }
  }

  
  
}

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!-- 
   參考文件：http://www.mybatis.org/core/zh/sqlmap-xml.html
   
   cache       – 配置給定命名空間的緩存。
   cache-ref   – 從其他命名空間引用緩存配置。
   resultMap   – 最複雜,也是最有力量的元素,用來描述如何從數據庫結果集中來加載你的對象。
   parameterMap– 已經被廢棄了!老式風格的參數映射。內聯參數是首選,這個元素可能在將來被移除。這裡不會記錄。
   sql         – 可以重用的SQL 塊,也可以被其他語句引用。
   insert      – 映射插入語句
   update      – 映射更新語句
   delete      – 映射刪除語句
   select      – 映射查詢語句
   
-->
<mapper namespace="mybatis.dao.PetMapper" >

  <!-- 
     參考文件：http://www.mybatis.org/core/zh/sqlmap-xml.html#Result_Maps
     
     resultMap 元素是MyBatis 中最重要最強大的元素。它就是讓你遠離90%的需要從結果集中取出數據的JDBC 代碼的那個東西, 
     而且在一些情形下允許你做一些JDBC 不支持的事情。事實上, 編寫相似於對複雜語句聯合映射這些等同的代碼, 也許可以跨過上千行的代碼。 
     ResultMap 的設計就是簡單語句不需要明確的結果映射,而很多複雜語句確實需要描述它們的關係。
  -->
  <resultMap id="BaseResultMap" type="mybatis.model.Pet" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="name"    property="name"    jdbcType="VARCHAR" />
    <result column="owner"   property="owner"   jdbcType="VARCHAR" />
    <result column="species" property="species" jdbcType="VARCHAR" />
    <result column="sex"     property="sex"     jdbcType="CHAR"    />
    <result column="birth"   property="birth"   jdbcType="DATE"    />
    <result column="death"   property="death"   jdbcType="DATE"    />
  </resultMap>
  
  
  
   
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    name, owner, species, sex, birth, death
  </sql>
  
  
  
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  









  
  <!--
      參考交件： 
      http://www.mybatis.org/core/zh/sqlmap-xml.html#select
  -->
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="mybatis.model.PetExample"  >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  
  <!--
      參考交件： 
      http://www.mybatis.org/core/zh/sqlmap-xml.html#insert_update_and_delete
  -->
  <delete id="deleteByExample" parameterType="mybatis.model.PetExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  
  <insert id="insert" parameterType="mybatis.model.Pet" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pet (name, owner, species, 
      sex, birth, death)
    values (#{name,jdbcType=VARCHAR}, #{owner,jdbcType=VARCHAR}, #{species,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{birth,jdbcType=DATE}, #{death,jdbcType=DATE})
  </insert>
  
  
  <insert id="insertSelective" parameterType="mybatis.model.Pet" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pet
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="owner != null" >
        owner,
      </if>
      <if test="species != null" >
        species,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birth != null" >
        birth,
      </if>
      <if test="death != null" >
        death,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="species != null" >
        #{species,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=DATE},
      </if>
      <if test="death != null" >
        #{death,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  
  
  
  <select id="countByExample" parameterType="mybatis.model.PetExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from pet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  
  
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pet
    <set >
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.owner != null" >
        owner = #{record.owner,jdbcType=VARCHAR},
      </if>
      <if test="record.species != null" >
        species = #{record.species,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.birth != null" >
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.death != null" >
        death = #{record.death,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
  
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pet
    set name = #{record.name,jdbcType=VARCHAR},
      owner = #{record.owner,jdbcType=VARCHAR},
      species = #{record.species,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      birth = #{record.birth,jdbcType=DATE},
      death = #{record.death,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
</mapper>